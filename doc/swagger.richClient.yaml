swagger: '2.0'
info:
  version: '1.0.0'
  title: Nearby News
  description: A simple API service that tells you about what's hot near you.
  termsOfService: https://github.com/BlueT/nearby-news/blob/master/TOS.txt
  contact:
    name: Nearby News team
    email: BlueT@BlueT.org
    url: https://github.com/BlueT/nearby-news
  license:
    name: AGPL-3.0
    url: http://opensource.org/licenses/AGPL-3.0
host: nearby.lc
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /news:
    get:
      description: Returns all news from the system that the user has access to
      operationId: findNews
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: latitude
          in: query
          description: Latitude of current location
          required: true
          type: integer
          format: float
        - name: longitude
          in: query
          description: Longititude of current location
          required: true
          type: integer
          format: float
        - name: radius
          in: query
          description: Radius of current view
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: news response
          schema:
            type: array
            items:
              $ref: '#/definitions/newsEntry'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      description: Creates a new news in the store.  Duplicates are allowed
      operationId: addNews
      produces:
        - application/json
      parameters:
        - name: news
          in: body
          description: News to add to the store
          required: true
          schema:
            $ref: '#/definitions/newNews'
      responses:
        '200':
          description: news response
          schema:
            $ref: '#/definitions/newsEntry'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /news/{id}:
    get:
      description: Returns a news based on a single ID
      operationId: findNewsById
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: id
          in: path
          description: ID of news to fetch
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: news response
          schema:
            $ref: '#/definitions/newsEntry'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: deletes a single news based on the ID supplied
      operationId: deleteNews
      parameters:
        - name: id
          in: path
          description: ID of news to delete
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: news deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
definitions:
  newsEntry:
    type: object
    required:
      - id
      - title
      - location
      - keywords
      - timestamp
      - source
      - source_site
      - category
      - positive
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      location:
        $ref: '#/definitions/location'
      keywords:
        type: array
        items:
          type: string
      timestamp:
        type: string
      source:
        type: string
      source_site:
        type: string
      category:
        type: string
      positive:
        type: integer
        format: int32
  location:
    type: object
    required:
      - longitude
      - latitude
    properties:
      longitude:
        type: integer
        format: float
      latitude:
        type: integer
        format: float
  newNews:
    $ref: '#/definitions/newsEntry'
  errorModel:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
